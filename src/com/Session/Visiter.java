package com.Session;
// Generated 23 mars 2022, 15:21:43 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Visiter generated by hbm2java
 */
@Entity
@Table(name = "visiter", catalog = "agence_immobiliere")
public class Visiter implements java.io.Serializable {

	private VisiterId id;
	private Client client;
	private Proprietes proprietes;
	private Date date;

	public Visiter() {
	}

	public Visiter(VisiterId id, Client client, Proprietes proprietes, Date date) {
		this.id = id;
		this.client = client;
		this.proprietes = proprietes;
		this.date = date;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idPropriete", column = @Column(name = "id_propriete", nullable = false)),
			@AttributeOverride(name = "idClient", column = @Column(name = "id_client", nullable = false)) })
	public VisiterId getId() {
		return this.id;
	}

	public void setId(VisiterId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_client", nullable = false, insertable = false, updatable = false)
	public Client getClient() {
		return this.client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_propriete", nullable = false, insertable = false, updatable = false)
	public Proprietes getProprietes() {
		return this.proprietes;
	}

	public void setProprietes(Proprietes proprietes) {
		this.proprietes = proprietes;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", nullable = false, length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

}
